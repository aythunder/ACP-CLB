import numpy as np
import  torch

def get_BLOSUM62(seq):
    if len(seq) < 50:
        seq = seq + (50 - len(seq)) * "X"
    elif len(seq)>50:
        seq=seq[:50]
    blosum62 = {
        'A': [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0],
        'R': [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3],
        'N': [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3],
        'D': [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3],
        'C': [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1],
        'Q': [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2],
        'E': [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2],
        'G': [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3],
        'H': [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3],
        'I': [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3],
        'L': [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1],
        'K': [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2],
        'M': [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1],
        'F': [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1],
        'P': [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2],
        'S': [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2],
        'T': [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0],
        'W': [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3],
        'Y': [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1],
        'V': [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4],
        'X': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    }

    encodings = []
    for j in seq:
        encodings.append(blosum62[j])
    return torch.tensor(encodings, dtype=torch.float32)


def get_AAindex(seq):
    if len(seq) < 50:
        seq = seq + (50 - len(seq)) * "X"
    elif len(seq)>50:
        seq=seq[:50]
    AAindex = {'A': [89.3, 1.43, 9.36, 0.96, 16.0, 7.9, 0.5, 0.0, 9.25, 0.92, 154.33, -0.04],
               'C': [102.5, 0.94, 2.56, 0.42, 168.0, 1.9, 0.0, 0.0, 1.07, 1.16, 219.79, -0.38],
               'D': [114.4, 0.92, 0.94, 0.42, -78.0, 5.5, 0.0, -1.0, 3.89, 0.48, 194.91, 0.19],
               'E': [138.8, 1.67, 0.94, 0.53, -106.0, 7.1, 0.0, -1.0, 4.8, 0.61, 223.16, 0.23],
               'F': [190.8, 1.19, 10.99, 0.59, 189.0, 3.9, 2.5, 0.0, 6.36, 1.25, 204.74, -0.38],
               'G': [63.8, 0.46, 6.17, 0.0, -13.0, 7.1, 0.0, 0.0, 8.51, 0.61, 127.9, 0.09],
               'H': [157.5, 0.98, 0.47, 0.57, 50.0, 2.1, 0.5, 0.0, 1.88, 0.93, 242.54, -0.04],
               'I': [163.0, 1.04, 13.73, 0.84, 151.0, 5.2, 1.8, 0.0, 6.47, 1.81, 233.21, -0.34],
               'K': [165.1, 1.27, 0.58, 0.73, -141.0, 6.7, 0.0, 1.0, 3.5, 0.7, 300.46, 0.33],
               'L': [163.1, 1.36, 16.64, 0.92, 145.0, 8.6, 1.8, 0.0, 10.94, 1.3, 232.3, -0.37],
               'M': [165.8, 1.53, 3.93, 0.86, 124.0, 2.4, 1.3, 0.0, 3.14, 1.19, 202.65, -0.3],
               'N': [122.4, 0.64, 2.31, 0.39, -74.0, 4.0, 0.0, 0.0, 3.71, 0.6, 207.9, 0.13],
               'P': [121.6, 0.49, 1.96, -2.5, -20.0, 5.3, 0.0, 0.0, 4.36, 0.4, 179.93, 0.19],
               'Q': [146.9, 1.22, 1.14, 0.8, -73.0, 4.4, 0.0, 0.0, 3.17, 0.95, 235.51, 0.14],
               'R': [190.3, 1.18, 0.27, 0.77, -70.0, 4.9, 0.0, 1.0, 3.96, 0.93, 341.01, 0.07],
               'S': [94.2, 0.7, 5.58, 0.53, -70.0, 6.6, 0.0, 0.0, 6.26, 0.82, 174.06, 0.12],
               'T': [119.6, 0.78, 4.68, 0.54, -38.0, 5.3, 0.4, 0.0, 5.66, 1.12, 205.8, 0.03],
               'V': [138.2, 0.98, 12.43, 0.63, 123.0, 6.8, 1.5, 0.0, 7.55, 1.81, 207.6, -0.29],
               'W': [226.4, 1.01, 2.2, 0.58, 145.0, 1.2, 3.4, 0.0, 2.22, 1.54, 237.01, -0.33],
               'Y': [194.6, 0.69, 3.13, 0.72, 53.0, 3.1, 2.3, 0.0, 3.28, 1.53, 229.15, -0.29],
               'X': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
    AA = []
    for j in seq:
        AA.append(AAindex[j])
    return torch.tensor(AA, dtype=torch.float32)